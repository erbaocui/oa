<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.sys.dao.TrainDao">
    
	<sql id="trainColumns">
		a.id AS "id",
		a.professional AS "professional",
		a.name AS "name",
		a.date AS "date",
		a.remark AS "remark",
		a.create_date AS "createDate",
		a.create_by AS "createBy.id",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="trainJoins">
	</sql>
    
	<select id="get" resultType="Train">
		SELECT 
			<include refid="trainColumns"/>
		FROM sys_train a
		<include refid="trainJoins"/>

		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Train">
		SELECT 
			<include refid="trainColumns"/>
		FROM sys_train a
		<if test="userList != null ">
			inner join sys_train_user b on a.id=b.train_id
		</if>
		<include refid="trainJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="professional != null and professional != ''">
				AND a.professional = #{professional}
			</if>
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="date != null and date != ''">
				AND a.date = #{date}
			</if>
			<if test="userList != null ">
				and b.user_id in
				<foreach  item="user" collection="userList" index="index"  open="(" separator="," close=")">
					#{user.id}
				</foreach>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Train">
		SELECT 
			<include refid="trainColumns"/>
		FROM sys_train a
		<include refid="trainJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	<select id="findUserByTrainId" resultType="User">
		SELECT
		a.id,
		a.login_name,
		a.name,
		o.name AS "office.name",
		a.mobile,
		a.phone
		FROM sys_user a
	    inner join sys_train_user b on  a.id= b.user_id
		LEFT JOIN sys_office o ON o.id = a.office_id
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<if test="id != null and id!= ''">
			AND b.train_id = #{id}
		</if>
		<if test="userList != null ">
		    and b.user_id in
		   <foreach  item="user" collection="userList" index="index"  open="(" separator="," close=")">
			 #{user.id}
		   </foreach>
		</if>

	</select>

	<!-- 删除用户和角色关联表数据 -->
	<delete id="deleteTrainUser">
		DELETE FROM sys_train_user WHERE train_id = #{id}
		<if test="userList != null ">
			and user_id in
			<foreach  item="user" collection="userList" index="index"  open="(" separator="," close=")">
				#{user.id}
			</foreach>
		</if>

	</delete>

	<!-- 插入用户和角色关联表数据 -->
	<insert id="insertTrainUser">
		INSERT INTO sys_train_user(train_id,user_id)
		<foreach collection="userList" item="user" separator=" union all ">
		SELECT #{id}, #{user.id}
		<if test="dbName != 'mssql'">
			FROM dual
		</if>
	    </foreach>
	</insert>
	
	<insert id="insert">
		INSERT INTO sys_train(
			id,
			professional,
			name,
			date,
			remark,
			create_date,
			create_by,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{professional},
			#{name},
			#{date},
			#{remark},
			#{createDate},
			#{createBy.id},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_train SET 	
			professional = #{professional},
			name = #{name},
			date = #{date},
			remark = #{remark},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE sys_train SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>